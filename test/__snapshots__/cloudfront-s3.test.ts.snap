// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resource creation default should match snapshot 1`] = `
Object {
  "Outputs": Object {
    "MyTestConstructCloudFrontDomain12BA5294": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "MyTestConstructCDNCFDistribution170B2D87",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246ArtifactHash4CFAADFB": Object {
      "Description": "Artifact hash for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB": Object {
      "Description": "S3 bucket for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C": Object {
      "Description": "S3 key for asset version \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "MyTestConstructCDNCFDistribution170B2D87": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerE7D62A1F",
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
        "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
      ],
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Ref": "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
                },
              },
            ],
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "MyTestConstructWebsiteBucketA07D6BA1",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "MyTestConstructOAIForBucket8661ED2F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MyTestConstructOAIForBucket8661ED2F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "MyTestConstructOriginRequestHandlerE7D62A1F": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "FunctionName": "exampleURLFormatter",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestConstructOriginRequestHandlerServiceRole827B3D8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "MyTestConstructOriginRequestHandlerE7D62A1F",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "MyTestConstructWebsiteBucketA07D6BA1": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestConstructWebsiteBucketPolicy6871CCFA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "MyTestConstructWebsiteBucketA07D6BA1",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "MyTestConstructOAIForBucket8661ED2F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyTestConstructWebsiteBucketA07D6BA1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "MyTestConstructWebsiteBucketA07D6BA1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;

exports[`Resource creation import s3 bucket should match snapshot 1`] = `
Object {
  "Outputs": Object {
    "MyTestConstructCloudFrontDomain12BA5294": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "MyTestConstructCDNCFDistribution170B2D87",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246ArtifactHash4CFAADFB": Object {
      "Description": "Artifact hash for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB": Object {
      "Description": "S3 bucket for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C": Object {
      "Description": "S3 key for asset version \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "MyTestConstructCDNCFDistribution170B2D87": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerE7D62A1F",
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
        "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
      ],
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Ref": "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
                },
              },
            ],
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "dummy.s3.",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ".",
                    Object {
                      "Ref": "AWS::URLSuffix",
                    },
                  ],
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "MyTestConstructOAIForBucket8661ED2F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MyTestConstructOAIForBucket8661ED2F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "MyTestConstructOriginRequestHandlerE7D62A1F": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "FunctionName": "exampleURLFormatter",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestConstructOriginRequestHandlerServiceRole827B3D8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "MyTestConstructOriginRequestHandlerE7D62A1F",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
  },
}
`;

exports[`Resource creation with custom domain should match snapshot 1`] = `
Object {
  "Outputs": Object {
    "MyTestConstructCloudFrontDomain12BA5294": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "MyTestConstructCDNCFDistribution170B2D87",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246ArtifactHash4CFAADFB": Object {
      "Description": "Artifact hash for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB": Object {
      "Description": "S3 bucket for asset \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
    "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C": Object {
      "Description": "S3 key for asset version \\"25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "MyTestConstructCDNCFDistribution170B2D87": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerE7D62A1F",
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
        "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
      ],
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "example.com",
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": Object {
                  "Ref": "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392",
                },
              },
            ],
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "MyTestConstructWebsiteBucketA07D6BA1",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "MyTestConstructOAIForBucket8661ED2F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": "dummyarn",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MyTestConstructOAIForBucket8661ED2F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "MyTestConstructOriginRequestHandlerE7D62A1F": Object {
      "DependsOn": Array [
        "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3Bucket79AC7ABB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters25a03ae01311780d8ca68ce4d0e26deed3cda9c2aedad4eca13e01840b975246S3VersionKey3690882C",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "FunctionName": "exampleURLFormatter",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyTestConstructOriginRequestHandlerServiceRole827B3D8C",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestConstructOriginRequestHandlerServiceRole827B3D8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestConstructOriginRequestHandlerVersionffeb06218dde4c44c416e4127bfa8fd1fe3fcf33eb17be3131ac5318012afdfb84542392": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "MyTestConstructOriginRequestHandlerE7D62A1F",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "MyTestConstructWebsiteBucketA07D6BA1": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestConstructWebsiteBucketPolicy6871CCFA": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "MyTestConstructWebsiteBucketA07D6BA1",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "MyTestConstructOAIForBucket8661ED2F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "MyTestConstructWebsiteBucketA07D6BA1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "MyTestConstructWebsiteBucketA07D6BA1",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;
